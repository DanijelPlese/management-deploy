{"version":3,"sources":["index.js"],"names":["popup","borderWidth","borderStyle","borderColor","background","popupBtns","display","justifyContent","flexDirection","input","marginTop","inputField","margin","fontSize","height","width","alignSelf","paddingLeft","inputForm","inputBtn","App","props","addingNewEntry","event","allPersons","state","personsList","setState","firstName","lastName","address","phoneNumber","id","nanoid","localStorage","setItem","JSON","stringify","preventDefault","getItem","parse","bind","clearAllData","this","clear","trigger","style","modal","close","type","value","onChange","target","autoComplete","placeholder","name","onClick","map","person","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b357ed45.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Popup from \"reactjs-popup\";\nimport { nanoid } from \"nanoid\";\n\nconst popup = {\n  borderWidth: 2,\n  borderStyle: \"solid\",\n  borderColor: \"black\",\n  background: \"lavender\",\n};\nconst popupBtns = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexDirection: \"row\",\n};\nconst input = {\n  marginTop: 80,\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexDirection: \"column\",\n};\nconst inputField = {\n  margin: 20,\n  fontSize: 25,\n  height: 40,\n  width: 400,\n  alignSelf: \"center\",\n  paddingLeft: 10,\n};\nconst inputForm = {\n  fontSize: 20,\n};\nconst inputBtn = {\n  margin: 20,\n  fontSize: 20,\n  height: 40,\n  width: 150,\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let personsList = [];\n    if (localStorage.getItem(\"personsList\")) {\n      personsList = JSON.parse(localStorage.getItem(\"personsList\"));\n    }\n    this.state = {\n      personsList: personsList,\n      firstName: \"\",\n      lastName: \"\",\n      address: \"\",\n      phoneNumber: \"\",\n    };\n\n    this.addingNewEntry = this.addingNewEntry.bind(this);\n    this.clearAllData = this.clearAllData.bind(this);\n  }\n\n  addingNewEntry = (event) => {\n    const allPersons = [...this.state.personsList];\n    this.setState(\n      {\n        personsList: [\n          {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            address: this.state.address,\n            phoneNumber: this.state.phoneNumber,\n            id: nanoid(3),\n          },\n          ...allPersons,\n        ],\n        firstName: \"\",\n        lastName: \"\",\n        address: \"\",\n        phoneNumber: \"\",\n      },\n      () => {\n        localStorage.setItem(\n          \"personsList\",\n          JSON.stringify(this.state.personsList)\n        );\n      }\n    );\n    event.preventDefault();\n  };\n\n  clearAllData() {\n    this.setState(\n      {\n        personsList: []\n      },\n      () => {\n        localStorage.clear('personsList');\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Popup trigger={<button style={inputBtn}>New Entry</button>} modal>\n            {(close) => (\n              <div style={popup}>\n                <div>\n                  <form style={input}>\n                    <input\n                      style={inputField}\n                      type=\"text\"\n                      value={this.state.firstName}\n                      onChange={(event) =>\n                        this.setState({ firstName: event.target.value })\n                      }\n                      autoComplete=\"off\"\n                      placeholder=\"Enter First Name\"\n                    ></input>\n                    <input\n                      style={inputField}\n                      type=\"text\"\n                      name=\"lastName\"\n                      value={this.state.lastName}\n                      onChange={(event) =>\n                        this.setState({ lastName: event.target.value })\n                      }\n                      autoComplete=\"off\"\n                      placeholder=\"Enter Last Name\"\n                    ></input>\n                    <input\n                      style={inputField}\n                      type=\"text\"\n                      name=\"address\"\n                      value={this.state.address}\n                      onChange={(event) =>\n                        this.setState({ address: event.target.value })\n                      }\n                      autoComplete=\"off\"\n                      placeholder=\"Enter Address\"\n                    ></input>\n                    <input\n                      style={inputField}\n                      type=\"text\"\n                      name=\"phoneNumber\"\n                      value={this.state.phoneNumber}\n                      onChange={(event) =>\n                        this.setState({ phoneNumber: event.target.value })\n                      }\n                      autoComplete=\"off\"\n                      placeholder=\"Enter Phone Number\"\n                    ></input>\n                    <div style={popupBtns}>\n                      <button style={inputBtn} onClick={this.addingNewEntry}>\n                        Submit\n                      </button>\n                      <button\n                        style={inputBtn}\n                        onClick={() => {\n                          close();\n                        }}\n                      >\n                        Close Window\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </Popup>\n\n          <button style={inputBtn} onClick={this.clearAllData} >Clear All Data</button>\n        </div>\n        <div style={inputForm}>\n          <form>\n            {this.state.personsList.map((person, id) => {\n              return (\n                <table>\n                  <thead>\n                    <tr>\n                      <th>First Name</th>\n                      <th>Second Name</th>\n                      <th>Address</th>\n                      <th>Phone Number</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>{person.firstName}</td>\n                      <td>{person.lastName}</td>\n                      <td>{person.address}</td>\n                      <td>{person.phoneNumber}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              );\n            })}\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}